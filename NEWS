Release 0.3.1
=============

  * gv_interface: fix device discovery by using 255.255.255.255 as broadcast address.
  * gv_interface: don't crash if there is no INET interface.
  * camera: make ArvCamera introspection friendly (John).
  * evaluator: fix comparison when one of the operand is a double.
  * python: don't crash on access to buffer data.
  * build: zlib check.
  * build: make configure pass even if gobject introspection is not available.

Release 0.3.0
=============

  * updated translations (Marek, Matej, Martin, Daniel, Joe, Kenneth, Rūdolfs, Andika, Balázs, Piotr, Christian, Мирослав)
  * make framerate work for The Imaging Source cameras (Edgar)
  * fix exposure setting on Point Grey Blackfly cameras
  * added frame rate support for The Imaging Source(TIS) cameras (Edgar)
  * gv_interface: strip control character from device id (Csaba)
  * gst_plugin: make the plugin more useful for a use inside an application (Edgar)
  * gst_plugin: honor do-timestamp property (Csaba)
  * arv-tool: fix IntReg display and don't display min/max if they are no specified
  * gv_device: don't send packet resend requests when this feature is not available
  * gv_device: implement register workaround for schema < 1.1.0
  * python: crash fixes (Olivier)
  * viewer: fix an issue when aravis buffer row stride is not a multiple of 4
  * viewer: improve framerate entry
  * viewer: translation update
  * compilation warning suppression
  * suppress glib deprecation warnings
  * add a define for BAYER_GR_12_PACKED pixel format

Release 0.2.0
=============

Stable release.

  * camera: add support for BAYER_GB_8 images used by ImageingSource DFK 23G445 cameras (Matthias)
  * camera: fix consistency of order of pixel format display names (Jure)
  * GV: fix parsing of hexadecimal address/length with 0x prefix in Genicam file URL
  * build: fix parallel compilation (make -j)
  
Release 0.1.15
==============

  * library: don't distribute arvconfig.h (Nial bug report)
  * viewer: desktop file and application icon
  * viewer: rotate and flip button
  * viewer: file save notification
  * viewer: use autovideosink instead of xvimagesink, for systems without XV extension
  * camera: pixel format API improvments (Jure)
  * system: disable the fake camera by default (Kai bug report)
  * genicam: fix "remaining operands" issue in evaluator (Tom bug report)
  * genicam: fix unzipping of genicam data on not supporting unaligned memory access (Nial)
  * GV stream: use machine time for buffer timestamp if GevTimestampTickFrequency register does not exist
  * gstreamer plugin: add auto gain, auto exposure, x and y offset properties (Philipp)
  
Release 0.1.14
==============

API breaks:

  arv_stream_timed_pop_buffer is now arv_stream_timeout_pop_buffer
  arv_camera_(get/set)_gain use a double value for gain
  arv_camera_get_gain_bounds also use doubles

Changes:

  * genicam: preliminary error handling
  * viewer: internationalization support
  * viewer: widget are now insensitive if feature is not available
  * viewer: fix gtk requirement
  * viewer: add optional support for gtk3
  * viewer: fix flicker on window resize
  * camera: use Gain feature instead of GainRaw when available
  * genicam: fix formula evaluation when they contain entities
  * 
Release 0.1.13
==============

  This release hopefufly adds support for cameras depending on IntSwissKnife
  for the computation of register addresses, like JAI cameras. It also allows to
  manually tweak the PacketSize parameter.

  * genicam: add support for SwissKnife in register address.
  * GV device: don't force the packet size.
  * GV device: export interface and device IP addresses (Luca).
  * tests: more unit tests.
  * build: don't require a C++ compiler by default.

Release 0.1.12
==============

  API warning: arv_stream_pop_buffer is now blocking. Use arv_stream_try_pop_buffer
  for non blocking behaviour.

  * genicam: support for StructReg StructEntry
  * stream: new pop_buffer / try_pop_buffer functions, consistent with glib async_queue API.
  * camera: new get/set_trigger_source functions.
  * tool: support for wildcard in camera name.
  * tool: ability to perform the same command on several cameras.
  * interface: new get_device_physical_id function.
  * genicam: rewrite on top of a DOM API.

Release 0.1.11
==============

  * viewer: add a snapshot button.
  * documentation: more information on GigE Vision protocol.
  * all: memory leak fixes.

Release 0.1.10
==============

  This release should fix the lost of connection, at least better than
  the last release. It also allows to instantiate a GigE Vision device
  using its MAC address.

  * device: new "control-lost" signal.
  * GV device: allow use of MAC address for device instantiation.
  * GV device: retry gvcp command if wrong packet is received.
  * GV device: try harder to get control register value in heartbeat thread.
  * GVCP: don't use 0 for packet counter value.

Release 0.1.9
=============

  This release fixes the lost of the connection to the device after
  about 65600 seconds.

  * GV device: don't compare guint32 and guint16.

Release 0.1.8
=============

  In this release, arv-show-devices is renamed to arv-tool, and gain the capability
  to read/write and list device features.

  * Build: fix headers for C++ compatibility (Andre Gaschler)
  * Genicam: partly implement isAvailable and isImplemented.

Release 0.1.7
=============

  More work on GV stream reception thread.

  * GV Stream: handle error GVSP packets.
  * GV Stream: always set packet size.
  * GV Stream: check for control access before creating stream object.
  * GV Stream: check the number of available stream channels.
  * GVCP: more sanity checks on ack packets.
  * GV Device: reliably check for control access.
  * Fake GV Camera: make it work with viewer.
  * Debug: allow different debug levels for each debug category.


Release 0.1.6
=============

  Work on GV stream reception reliability, with improved packet resend mechanism.

  * Camera: software trigger support
  * GV Stream: rewrite of the receiving thread
  * Introspection: annotation fixes
  * Build: make stable release parallel installable

Release 0.1.5
=============

  Release mostly focused on color support improvements.

  * GstAravis: switch to negociated width, height, framerate and pixel format
  * Evaluator: fix support of variable name containing digits
  * Buffer: add a per buffer user data
  * Stream: add a timed buffer pop function
  * Stream: switch to gobject properties for packet resend and socket buffer size
  * Camera: more bounds functions

Release 0.1.4
=============

  * Viewer: support for some color pixel formats
  * Viewer: support for auto gain and auto exposure
  * Utils: Genicam xml data dump capability added to arv-show-devices
  * Camera API: Fix exposure setting for Ace Basler cameras
  * Genicam: Fix caching of registers on read

Release 0.1.3
=============

  * Simple viewer based on ArvCamera API (requires gtk and gstreamer)
  * Add a "new-buffer" signal to ArvStream
  * Fix stream IP address setting for JAI Pulnix cameras (Tom Cobb)
  * Fix use or Aravis from a C++ application (Tom Cobb)
  * Fix division of integers in ArvEvaluator when asked for float result (Tom Cobb)
  * Add an API for retrieving the genicam data (Tom Cobb)
  * Fix minimum offset of ROI (Tom Cobb)
  * Fake camera can now simulate gain and exposure setting

Release 0.1.2
=============

  * Add exposure and gain settings to the gstreamer source element
  * fix exposure setting in ArvCamera for Basler cameras
  * gather running statistics for the GV devices
  * fix GV stream fixed buffer size
  * add a new arv-show-devices utility
  * make API more consistent with the Genicam standard

Release 0.1.1
=============

  * Basic ethernet camera simulator
  * Allow detection of ethernet cameras on lo, for the GV camera simulator
  * Fix in gvcp support code
  * More unit tests
  * Add support for <Group> GENICAM element 
  * Memory leak fixes
  * Record statistics on buffer reception times
  * Improve compilation on 64 bit platforms

Release 0.1.0
=============

Initial release.
